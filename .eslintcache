[{"C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\index.tsx":"1","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\App.tsx":"2","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\pages\\Home.tsx":"3","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\pages\\Login.tsx":"4","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\pages\\Signup.tsx":"5","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\redux\\types.tsx":"6","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\redux\\store.tsx":"7","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\redux\\actions\\userActions.tsx":"8","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\redux\\reducers\\userReducer.tsx":"9","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\pages\\Steps.tsx":"10","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\config.tsx":"11","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\redux\\actions\\stepsActions.tsx":"12"},{"size":333,"mtime":1611001874487,"results":"13","hashOfConfig":"14"},{"size":1669,"mtime":1611001934629,"results":"15","hashOfConfig":"14"},{"size":885,"mtime":1611001790959,"results":"16","hashOfConfig":"14"},{"size":1528,"mtime":1611002042984,"results":"17","hashOfConfig":"14"},{"size":1895,"mtime":1611002046250,"results":"18","hashOfConfig":"14"},{"size":175,"mtime":1610323739526,"results":"19","hashOfConfig":"14"},{"size":581,"mtime":1610327605550,"results":"20","hashOfConfig":"14"},{"size":1446,"mtime":1611001650033,"results":"21","hashOfConfig":"14"},{"size":594,"mtime":1610327755055,"results":"22","hashOfConfig":"14"},{"size":2130,"mtime":1610889271626,"results":"23","hashOfConfig":"14"},{"size":88,"mtime":1610888612005,"results":"24","hashOfConfig":"14"},{"size":306,"mtime":1610889264445,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ks94t0",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\index.tsx",[],["58","59"],"C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\App.tsx",["60","61","62"],"import React, { FC, useState } from 'react';\r\nimport { Router, RouteComponentProps, Location, navigate } from '@reach/router';\r\nimport jwtDecode from 'jwt-decode';\r\nimport axios from 'axios';\r\n\r\nimport { getUserData, logoutUser } from './redux/actions/userActions';\r\nimport { SET_AUTHENTICATED } from './redux/types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport Steps from './pages/Steps';\r\n\r\nimport store from './redux/store';\r\n\r\ninterface HomePgComponentProps extends RouteComponentProps {\r\n  authState: number;\r\n}\r\n\r\ninterface AppProps {}\r\n\r\nconst App: FC<AppProps> = () => {\r\n  const [authState, setAuthState] = useState<number>(0);\r\n\r\n  const HomePg = (props: HomePgComponentProps) => <Home authState={authState} />;\r\n  const SignupPg = (props: RouteComponentProps) => <Signup />;\r\n  const LoginPg = (props: RouteComponentProps) => <Login />;\r\n  const StepsPg = (props: RouteComponentProps) => <Steps />;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const token = localStorage.FBIdToken;\r\n  if (token) {\r\n    const decodedToken: any = jwtDecode(token);\r\n    if (decodedToken.exp * 1000 < Date.now()) {\r\n      logoutUser(dispatch);\r\n      navigate('/login');\r\n    } else {\r\n      dispatch({ type: SET_AUTHENTICATED });\r\n      axios.defaults.headers.common['Authorization'] = token;\r\n      dispatch(getUserData());\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <HomePg path='/' authState={authState} />\r\n      <SignupPg path='signup' />\r\n      <LoginPg path='login' />\r\n      <StepsPg path='steps' />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\pages\\Home.tsx",[],"C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\pages\\Login.tsx",["63"],"import React, { FC, ChangeEvent, useState } from 'react';\r\n\r\nimport store from '../redux/store';\r\nimport { loginUser } from '../redux/actions/userActions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\ninterface Props {}\r\n\r\nconst Login: FC<Props> = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    if (email.includes('@')) {\r\n      console.log('email');\r\n    } else {\r\n      console.log('handle');\r\n    }\r\n\r\n    console.log(email, password);\r\n\r\n    const userData = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    loginUser(userData, dispatch);\r\n  };\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    switch (e.target.name) {\r\n      case 'email':\r\n        setEmail(e.target.value);\r\n        return;\r\n      case 'password':\r\n        setPassword(e.target.value);\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='Login'>\r\n      <h1>Login</h1>\r\n      <form className='form' onSubmit={handleSubmit}>\r\n        <label>Username or Email</label>\r\n        <input name='email' type='text' value={email} onChange={handleChange} />\r\n        <label>Password</label>\r\n        <input name='password' type='password' value={password} onChange={handleChange} />\r\n        <button data-testid='submit-button'>submit</button>\r\n      </form>\r\n      <a href='/'>Home</a>\r\n      <a href='/signup'>Signup</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\pages\\Signup.tsx",["64"],"import React, { FC, ChangeEvent, useState } from 'react';\r\n\r\nimport store from '../redux/store';\r\nimport { signupUser } from '../redux/actions/userActions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\ninterface Props {}\r\n\r\nconst Signup: FC<Props> = () => {\r\n  const [handle, setHandle] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirm, setConfirm] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e: any) => {\r\n    console.log('submitted');\r\n    e.preventDefault();\r\n    let userData = {\r\n      handle,\r\n      email,\r\n      password,\r\n      confirm,\r\n    };\r\n    console.log(userData);\r\n    signupUser(userData, dispatch);\r\n  };\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    switch (e.target.name) {\r\n      case 'handle':\r\n        setHandle(e.target.value);\r\n        return;\r\n      case 'email':\r\n        setEmail(e.target.value);\r\n        return;\r\n      case 'password':\r\n        setPassword(e.target.value);\r\n        return;\r\n      case 'confirm':\r\n        setConfirm(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='Login'>\r\n      <h1>Signup</h1>\r\n      <form className='form' onSubmit={handleSubmit}>\r\n        <label>Username</label>\r\n        <input name='handle' type='text' value={handle} onChange={handleChange} />\r\n        <label>Email</label>\r\n        <input name='email' type='text' value={email} onChange={handleChange} />\r\n        <label>Password</label>\r\n        <input name='password' type='password' value={password} onChange={handleChange} />\r\n        <label>Confirm Password</label>\r\n        <input name='confirm' type='password' value={confirm} onChange={handleChange} />\r\n        <button data-testid='submit-button'>submit</button>\r\n      </form>\r\n      <a href='/'>Home</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\redux\\types.tsx",[],"C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\redux\\store.tsx",[],"C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\redux\\actions\\userActions.tsx",["65"],"import { SET_USER, SET_UNAUTHENTICATED } from '../types';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { api } from '../../config';\r\n\r\nconst setAuthorizationHeader = (token: any) => {\r\n  const FBIdToken = `Bearer ${token}`;\r\n  localStorage.setItem('FBIdToken', FBIdToken);\r\n  axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n};\r\n\r\nexport const getUserData = () => async (dispatch: any) => {\r\n  const userDetails = await axios.get(`${api}/user`);\r\n\r\n  dispatch({\r\n    type: SET_USER,\r\n    payload: userDetails.data,\r\n  });\r\n};\r\n\r\nexport const signupUser = async (newUserData: any, dispatch: any) => {\r\n  const res: any = await axios.post(`${api}/signup`, {\r\n    email: newUserData.email,\r\n    password: newUserData.password,\r\n    confirmPassword: newUserData.confirmPassword,\r\n    handle: newUserData.handle,\r\n  });\r\n  setAuthorizationHeader(res.data.token);\r\n\r\n  dispatch(getUserData());\r\n  navigate('/');\r\n};\r\n\r\nexport const loginUser = async (userData: any, dispatch: any) => {\r\n  console.log(userData);\r\n  const res = await axios.post(`${api}/login`, userData);\r\n  setAuthorizationHeader(res.data.token);\r\n  dispatch(getUserData());\r\n  navigate('/');\r\n};\r\n\r\nexport const logoutUser = (dispatch: any) => {\r\n  localStorage.removeItem('FBIdToken');\r\n  delete axios.defaults.headers.common['Authorization'];\r\n  dispatch({ type: SET_UNAUTHENTICATED });\r\n};\r\n","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\redux\\reducers\\userReducer.tsx",[],"C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\pages\\Steps.tsx",["66"],"import React, { FC, useState, useEffect } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nimport { setStepData } from \"../redux/actions/stepsActions\";\r\n\r\ninterface Props {}\r\n\r\nconst Steps: FC<Props> = () => {\r\n  const [dateWalked, setDateWalked] = useState(\"\");\r\n  const [stepsWalked, setStepsWalked] = useState(0);\r\n\r\n  const [revealState, setRevealState] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const date = new Date();\r\n    const yy = date.getFullYear();\r\n    const mm = date.getMonth();\r\n    const dd = date.getDate();\r\n    const formatDate = `${yy}-${mm > 9 ? mm + 1 : 0 + (mm + 1).toString()}-${dd}`;\r\n    setDateWalked(formatDate);\r\n  }, []);\r\n\r\n  const handleChange = (e: any) => {\r\n    switch (e.target.name) {\r\n      case \"dateWalked\":\r\n        setDateWalked(e.target.value);\r\n        return;\r\n      case \"stepsWalked\":\r\n        setStepsWalked(e.target.value);\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    setStepData(stepsWalked, dateWalked);\r\n  };\r\n\r\n  const handleClick = (num: number) => {\r\n    const date = new Date(dateWalked);\r\n    const yy = date.getFullYear();\r\n    const mm = date.getMonth();\r\n    const dd = date.getDate();\r\n    const formatDate = `${yy}-${mm > 9 ? mm + 1 : 0 + (mm + 1).toString()}-${dd > 10 ? dd + num : 0 + (dd + num).toString()}`;\r\n    setDateWalked(formatDate);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>steps</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <input name='dateWalked' type='date' value={dateWalked} onChange={handleChange} />\r\n        <input name='stepsWalked' type='number' value={stepsWalked} onChange={handleChange} />\r\n        <button type='submit'>submit</button>\r\n        <button type='button' onClick={() => handleClick(-1)}>\r\n          Previous\r\n        </button>\r\n        <button type='button' onClick={() => handleClick(1)}>\r\n          Next\r\n        </button>\r\n      </form>\r\n      {revealState ? (\r\n        <div>\r\n          <p>{dateWalked}</p>\r\n          <p>{stepsWalked}</p>\r\n        </div>\r\n      ) : null}\r\n      <Link to='/'>Home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Steps;\r\n","C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\config.tsx",[],"C:\\Users\\David\\Desktop\\desktop\\Coding\\Work\\orson-home-app\\src\\redux\\actions\\stepsActions.tsx",["67","68","69","70"],"import { SET_USER, SET_UNAUTHENTICATED } from \"../types\";\r\nimport axios from \"axios\";\r\nimport { navigate } from \"@reach/router\";\r\nimport { api } from \"../../config\";\r\n\r\nexport const setStepData = async (steps: number, day: string) => {\r\n  const res = await axios.post(`${api}/steps`, { steps, day });\r\n};\r\n",["71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":39,"nodeType":"79","messageId":"80","endLine":2,"endColumn":47},{"ruleId":"77","severity":1,"message":"81","line":15,"column":8,"nodeType":"79","messageId":"80","endLine":15,"endColumn":13},{"ruleId":"77","severity":1,"message":"82","line":24,"column":21,"nodeType":"79","messageId":"80","endLine":24,"endColumn":33},{"ruleId":"77","severity":1,"message":"81","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":13},{"ruleId":"77","severity":1,"message":"81","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":13},{"ruleId":"77","severity":1,"message":"83","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":21},{"ruleId":"77","severity":1,"message":"84","line":12,"column":23,"nodeType":"79","messageId":"80","endLine":12,"endColumn":37},{"ruleId":"77","severity":1,"message":"85","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":18},{"ruleId":"77","severity":1,"message":"86","line":1,"column":20,"nodeType":"79","messageId":"80","endLine":1,"endColumn":39},{"ruleId":"77","severity":1,"message":"87","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":18},{"ruleId":"77","severity":1,"message":"88","line":7,"column":9,"nodeType":"79","messageId":"80","endLine":7,"endColumn":12},{"ruleId":"73","replacedBy":"89"},{"ruleId":"75","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"@typescript-eslint/no-unused-vars","'Location' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","'setAuthState' is assigned a value but never used.","'useDispatch' is defined but never used.","'setRevealState' is assigned a value but never used.","'SET_USER' is defined but never used.","'SET_UNAUTHENTICATED' is defined but never used.","'navigate' is defined but never used.","'res' is assigned a value but never used.",["91"],["92"],"no-global-assign","no-unsafe-negation"]